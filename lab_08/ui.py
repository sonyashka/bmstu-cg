# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'lab07.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setMinimumSize(QtCore.QSize(800, 600))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(10, 10, 581, 551))
        self.graphicsView.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.graphicsView.setObjectName("graphicsView")
        self.actionLabel = QtWidgets.QLabel(self.centralwidget)
        self.actionLabel.setGeometry(QtCore.QRect(610, 190, 171, 41))
        self.actionLabel.setStyleSheet("background-color: rgb(140, 209, 255);")
        self.actionLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.actionLabel.setObjectName("actionLabel")
        self.cutterInputBut = QtWidgets.QPushButton(self.centralwidget)
        self.cutterInputBut.setGeometry(QtCore.QRect(610, 240, 171, 41))
        self.cutterInputBut.setStyleSheet("background-color: rgb(255, 145, 135);")
        self.cutterInputBut.setObjectName("cutterInputBut")
        self.lineInputBut = QtWidgets.QPushButton(self.centralwidget)
        self.lineInputBut.setGeometry(QtCore.QRect(610, 300, 171, 41))
        self.lineInputBut.setStyleSheet("background-color: rgb(255, 145, 135);")
        self.lineInputBut.setObjectName("lineInputBut")
        self.cutBut = QtWidgets.QPushButton(self.centralwidget)
        self.cutBut.setGeometry(QtCore.QRect(610, 360, 171, 41))
        self.cutBut.setStyleSheet("background-color: rgb(255, 145, 135);")
        self.cutBut.setObjectName("cutBut")
        self.colorCutterBox = QtWidgets.QComboBox(self.centralwidget)
        self.colorCutterBox.setGeometry(QtCore.QRect(610, 40, 171, 22))
        self.colorCutterBox.setStyleSheet("background-color: rgb(217, 255, 255);")
        self.colorCutterBox.setObjectName("colorCutterBox")
        self.colorCutterBox.addItem("")
        self.colorCutterBox.addItem("")
        self.colorCutterBox.addItem("")
        self.butLabel = QtWidgets.QLabel(self.centralwidget)
        self.butLabel.setGeometry(QtCore.QRect(610, 400, 171, 151))
        self.butLabel.setWordWrap(True)
        self.butLabel.setObjectName("butLabel")
        self.colorCutterLabel = QtWidgets.QLabel(self.centralwidget)
        self.colorCutterLabel.setGeometry(QtCore.QRect(610, 10, 171, 31))
        self.colorCutterLabel.setStyleSheet("background-color: rgb(140, 209, 255);")
        self.colorCutterLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.colorCutterLabel.setObjectName("colorCutterLabel")
        self.colorCuttedBox = QtWidgets.QComboBox(self.centralwidget)
        self.colorCuttedBox.setGeometry(QtCore.QRect(610, 160, 171, 22))
        self.colorCuttedBox.setStyleSheet("background-color: rgb(217, 255, 255);")
        self.colorCuttedBox.setObjectName("colorCuttedBox")
        self.colorCuttedBox.addItem("")
        self.colorCuttedBox.addItem("")
        self.colorCuttedBox.addItem("")
        self.colorCuttedLabel = QtWidgets.QLabel(self.centralwidget)
        self.colorCuttedLabel.setGeometry(QtCore.QRect(610, 130, 171, 31))
        self.colorCuttedLabel.setStyleSheet("background-color: rgb(140, 209, 255);")
        self.colorCuttedLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.colorCuttedLabel.setObjectName("colorCuttedLabel")
        self.colorLineBox = QtWidgets.QComboBox(self.centralwidget)
        self.colorLineBox.setGeometry(QtCore.QRect(610, 100, 171, 22))
        self.colorLineBox.setStyleSheet("background-color: rgb(217, 255, 255);")
        self.colorLineBox.setObjectName("colorLineBox")
        self.colorLineBox.addItem("")
        self.colorLineBox.addItem("")
        self.colorLineBox.addItem("")
        self.colorLineLabel = QtWidgets.QLabel(self.centralwidget)
        self.colorLineLabel.setGeometry(QtCore.QRect(610, 70, 171, 31))
        self.colorLineLabel.setStyleSheet("background-color: rgb(140, 209, 255);")
        self.colorLineLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.colorLineLabel.setObjectName("colorLineLabel")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        self.menu_1 = QtWidgets.QAction("Условие задачи")
        self.menubar.addAction(self.menu_1)
        self.menu_1.triggered.connect(self.task)
        self.menu_2 = QtWidgets.QAction("Об авторе")
        self.menubar.addAction(self.menu_2)
        self.menu_2.triggered.connect(self.info)
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.actionLabel.setText(_translate("MainWindow", "Выберите действие"))
        self.cutterInputBut.setText(_translate("MainWindow", "Ввести отсекатель"))
        self.lineInputBut.setText(_translate("MainWindow", "Ввести отрезки"))
        self.cutBut.setText(_translate("MainWindow", "Провести отсечение"))
        self.colorCutterBox.setItemText(0, _translate("MainWindow", "Красный"))
        self.colorCutterBox.setItemText(1, _translate("MainWindow", "Зеленый"))
        self.colorCutterBox.setItemText(2, _translate("MainWindow", "Синий"))
        self.butLabel.setText(_translate("MainWindow", "Кнопочный функционал:\n"
"Ctrl+Q - Переход в режим горизонтальных линий (повторно для выключения)\n"
"Ctrl+W - Переход в режим вертикальных линий (повторно для выключения)\n"
"Ctrl+C - Очистить экран\n"
"Ctrl+Z - Отмена отсечения"))
        self.colorCutterLabel.setText(_translate("MainWindow", "Выберите цвет отсекателя"))
        self.colorCuttedBox.setItemText(0, _translate("MainWindow", "Оранжевый"))
        self.colorCuttedBox.setItemText(1, _translate("MainWindow", "Желтый"))
        self.colorCuttedBox.setItemText(2, _translate("MainWindow", "Циан"))
        self.colorCuttedLabel.setText(_translate("MainWindow", "Выберите цвет отсеченных"))
        self.colorLineBox.setItemText(0, _translate("MainWindow", "Черный"))
        self.colorLineBox.setItemText(1, _translate("MainWindow", "Серый"))
        self.colorLineBox.setItemText(2, _translate("MainWindow", "Пурпурный"))
        self.colorLineLabel.setText(_translate("MainWindow", "Выберите цвет отрезков"))

    def task(self):
        taskMes = QtWidgets.QMessageBox()
        taskMes.setWindowTitle("Условие задачи")
        taskMes.setText("Предоставить пользователю возможность ввода выпуклого отсекателя и отсекаемых отрезков. Выделить отсеченные элементы другим цветом.")
        taskMes.setIcon(QtWidgets.QMessageBox.Information)
        taskMes.exec_()

    def info(self):
        infoMes = QtWidgets.QMessageBox()
        infoMes.setWindowTitle("Об авторе")
        infoMes.setText("Лабораторная работа №8 'Отсечение отрезков выпуклыым отсекателем' была написана Параскун Софией, ИУ7-44Б")
        infoMes.setIcon(QtWidgets.QMessageBox.Information)
        infoMes.exec_()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
